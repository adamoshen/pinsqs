% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pin-read-write-qs.R
\name{pin_qread}
\alias{pin_qread}
\alias{pin_qsave}
\title{Read and write \code{.qs} objects to and from a board}
\usage{
pin_qread(board, name, nthreads = NULL, ...)

pin_qsave(board, x, name, nthreads = NULL, ...)
}
\arguments{
\item{board}{A pin board, created by a \verb{pins::board_*()} function.}

\item{name}{Pin name.}

\item{nthreads}{Number of threads to use. Defaults to value returned by \code{\link[parallel:detectCores]{parallel::detectCores()}}
divided by 2. If \code{parallel::detectCores()} returns \code{NA}, this will fallback to the default of 1.}

\item{...}{Additional arguments passed on to \code{\link[pins:pin_download]{pins::pin_upload()}}/\code{\link[pins:pin_download]{pins::pin_download()}}, or
methods for a specific board. This includes additional fields such as \code{title} and \code{description}.}

\item{x}{An object to pin.}
}
\description{
Use \code{pin_qsave()} to pin a \code{.qs} object, and use \code{pin_qread()} to retrieve it.
}
\examples{
library(tibble)
library(magrittr)
library(pins)

# Initialise the pin board, as usual
board <- board_temp()

# Create data to be pinned
rock <- datasets::rock \%>\%
  as_tibble()

# Pin the data to the board (as a `.qs` file)
board \%>\%
  pin_qsave(
    rock, "rock-tibble",
    description="`rock` data set as a tibble"
  )

# Checking the contents of our pin board, as usual
board \%>\%
  pin_search()

# View pin metadata, as usual
board \%>\%
  pin_meta("rock-tibble")

# Read the pinned data (as a `.qs` file) from the board
board \%>\%
  pin_qread("rock-tibble")
}
